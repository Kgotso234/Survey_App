generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model favorite_foods {
  id            Int          @id @default(autoincrement())
  respondent_id Int?
  food_name     String       @db.VarChar(50)
  respondents   respondents? @relation(fields: [respondent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model lifestyle_rating {
  id            Int          @id @default(autoincrement())
  respondent_id Int?
  watch_movie   Int
  listen_radio  Int
  eat_out       Int
  watch_tv      Int
  respondents   respondents? @relation(fields: [respondent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model respondents {
  id               Int                @id(map: "respondants_pkey") @default(autoincrement())
  full_name        String             @db.VarChar(100)
  email            String             @db.VarChar(100)
  age              Int?
  date_of_birth    DateTime           @db.Date
  contact_no       String             @db.VarChar(20)
  submitted_att    DateTime?          @default(now()) @db.Timestamp(6)
  favorite_foods   favorite_foods[]
  lifestyle_rating lifestyle_rating[]
}
